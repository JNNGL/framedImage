plugins {
  id 'java'
  id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.jnngl'
version = '1.4'

repositories {
  mavenCentral()
  maven {
    name = 'papermc-repo'
    url = 'https://repo.papermc.io/repository/maven-public/'
  }
  maven {
    name = 'elytrium-repo'
    url = 'https://maven.elytrium.net/repo'
  }
  maven {
    name = 'jnngl-repo'
    url = 'https://jnngl.com/repo'
  }
}

dependencies {
  implementation 'net.elytrium:elytrium-java-commons:1.0.8'
  implementation 'com.jnngl:mapcolor:1.0.1-SNAPSHOT'
  implementation 'org.bstats:bstats-bukkit:3.0.0'

  compileOnly 'com.destroystokyo.paper:paper-api:1.12.2-R0.1-SNAPSHOT'

  compileOnly 'io.netty:netty-all:4.1.85.Final'
}

def targetJavaVersion = 11
java {
  def javaVersion = JavaVersion.toVersion(targetJavaVersion)
  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion
  if (JavaVersion.current() < javaVersion) {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
  }
}

tasks.withType(JavaCompile).configureEach {
  if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
    options.release = targetJavaVersion
  }
}

processResources {
  def props = [version: version]
  inputs.properties props
  filteringCharset 'UTF-8'
  filesMatching('plugin.yml') {
    expand props
  }
}

shadowJar {
  getArchiveClassifier() set ''

  relocate 'org.bstats', 'com.jnngl.framedimage.thirdparty.org.bstats'
}

assemble.dependsOn shadowJar